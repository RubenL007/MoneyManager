@page "/Demo"
@using MoneyManager.Data.Interface
@using MoneyManager.Data.Models

@inject NavigationManager navigationManager
@inject IAccount accountService
@inject ICategory categoryService
@inject ISeller sellerService
@inject IMonthSheet monthSheetService

<CardComponent>
    <h3>Demo Mode</h3>

    <p><strong>Demo Mode</strong> will reset the application by <strong>clearing all existing data</strong> and loading a predefined set of sample data.</p>
    <p>This makes it easy to explore, test, and understand how the application works, without needing to input everything manually.</p>

    <p><em>The demo data is always the same and was created during development to showcase key features.</em></p>

    <p>If you prefer to start fresh and set everything up yourself, you can also <strong>clear all data without loading the demo</strong>.</p>


    <div class="row mt-3">
        <div class="col-auto">
            <ButtonComponent DisplayName="Activate Demo Mode"
                             OnClick=@DemoModeOn />
        </div>
        <div class="col-auto">
            <ButtonComponent DisplayName="Clear ALL Data"
                             Color=@ColorsEnum.danger
                             OnClick=@ClearAllData />
        </div>
    </div>
</CardComponent>

@code {
    public List<AccountModel> Accounts = new()
    {
        new AccountModel () { Name = "Revolut" },
        new AccountModel () { Name = "Santander" },
        new AccountModel () { Name = "CGD" },
    };

    public List<SellerModel> Sellers = new()
    {
        new SellerModel() { Name = "Trofa Saúde" },
        new SellerModel() { Name = "Continente" },
        new SellerModel() { Name = "Pingo Doce" },
        new SellerModel() { Name = "Hospital da Luz" },
        new SellerModel() { Name = "Maxmat" },
        new SellerModel() { Name = "Leroy Merlin" },
        new SellerModel() { Name = "Norauto" },
        new SellerModel() { Name = "Autodoc" },
        new SellerModel() { Name = "Fnac" },
        new SellerModel() { Name = "Worten" },
    };

    public List<CategoryModel> Categories = new()
    {
        new CategoryModel() { Name = "Saúde" },
        new CategoryModel() { Name = "Casa" },
        new CategoryModel() { Name = "Carro" },
        new CategoryModel() { Name = "Comida" },
        new CategoryModel() { Name = "Necessidades Básicas" },
    };

    public MonthSheetModel monthSheet1 = new();
    public MonthSheetModel monthSheet2 = new();
    public MonthSheetModel monthSheet3 = new();
    public MonthSheetModel monthSheet4 = new();

    #region Task FillData()
    private async Task FillData()
    {
        #region Create Accounts
        foreach (var account in Accounts)
        {
            accountService.CreateAccount(account);
        }
        #endregion
        #region Create Sellers
        foreach (var seller in Sellers)
        {
            sellerService.CreateSeller(seller);
        }
        #endregion
        #region Create Categories
        foreach (var category in Categories)
        {
            categoryService.CreateCategory(category);
        }
        #endregion
        #region Create MonthSheets
        monthSheet1 = new MonthSheetModel()
            {
                Date = DateTime.Now.AddMonths(-3),
                Categories = new()
                {
                   new CategoryModel()
                   {
                       Name = Categories[0].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[0],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Consulta de Rotina",
                                Seller = Sellers[0],
                                Spent = 70
                           }
                       }
                   },
                   new CategoryModel()
                   {
                       Name = Categories[1].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Relva sintética para o terraço",
                                Seller = Sellers[5],
                                Spent = 225.90
                           },
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Conjunto de sofás de exterior",
                                Seller = Sellers[5],
                                Spent = 399.90
                           }
                       }
                   },
                   new CategoryModel()
                   {
                       Name = Categories[4].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Compras da casa do mês",
                                Seller = Sellers[1],
                                Spent = 315.80
                           },
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Águas em promoção",
                                Seller = Sellers[2],
                                Spent = 13.90
                           },
                       }
                   },
                },
                EstimatedEarned = 1500,
                EstimatedSpent = 700,
                Earnings =
                {
                    new EarningModel()
                    {
                        Account = Accounts[1],
                        Date = DateTime.Now.AddMonths(-3),
                        Name = "Salário",
                        Value = 1500
                    },
                }
            };
        monthSheetService.CreateMonthSheet(monthSheet1);

        monthSheet2 = new MonthSheetModel()
            {
                Date = DateTime.Now.AddMonths(-2),
                Categories = new()
                {
                   new CategoryModel()
                   {
                       Name = Categories[0].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[0],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Raio X Perna",
                                Seller = Sellers[3],
                                Spent = 140
                           }
                       }
                   },
                   new CategoryModel()
                   {
                       Name = Categories[1].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Luzes solares de exterior",
                                Seller = Sellers[5],
                                Spent = 35.40
                           }
                       }
                   },
                   new CategoryModel()
                   {
                       Name = Categories[4].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Compras da casa do mês",
                                Seller = Sellers[1],
                                Spent = 315.80
                           },
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Águas em promoção",
                                Seller = Sellers[2],
                                Spent = 13.90
                           },
                       }
                   },
                },
                EstimatedEarned = 1500,
                EstimatedSpent = 700,
                Earnings =
                {
                    new EarningModel()
                    {
                        Account = Accounts[1],
                        Date = DateTime.Now.AddMonths(-3),
                        Name = "Salário",
                        Value = 1500
                    },
                    new EarningModel()
                    {
                        Account = Accounts[1],
                        Date = DateTime.Now.AddMonths(-3),
                        Name = "Bónus funcionario do mês",
                        Value = 300
                    }
                }
            };
        monthSheetService.CreateMonthSheet(monthSheet2);

        monthSheet3 = new MonthSheetModel()
            {
                Date = DateTime.Now.AddMonths(-1),
                Categories = new()
                {
                   new CategoryModel()
                   {
                       Name = Categories[2].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Conjunto jantes cromadas 19'",
                                Seller = Sellers[6],
                                Spent = 699
                           },
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Conjunto de Penus novos Michelin",
                                Seller = Sellers[6],
                                Spent = 405
                           },
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Mudança de Óleo e filtros",
                                Seller = Sellers[6],
                                Spent = 120
                           },
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Substituição do turbo",
                                Seller = Sellers[6],
                                Spent = 599
                           }
                       }
                   },
                   new CategoryModel()
                   {
                       Name = Categories[4].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Compras da casa do mês",
                                Seller = Sellers[1],
                                Spent = 315
                           }
                       }
                   },
                },
                EstimatedEarned = 1500,
                EstimatedSpent = 700,
                Earnings =
                {
                    new EarningModel()
                    {
                        Account = Accounts[1],
                        Date = DateTime.Now.AddMonths(-3),
                        Name = "Salário",
                        Value = 1500
                    }
                }
            };
        monthSheetService.CreateMonthSheet(monthSheet3);

        monthSheet4 = new MonthSheetModel()
            {
                Date = DateTime.Now,
                Categories = new()
                {
                   new CategoryModel()
                   {
                       Name = Categories[4].Name,
                       Expenses =
                       {
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Compras da casa do mês",
                                Seller = Sellers[1],
                                Spent = 315.80
                           },
                           new ExpenseModel()
                           {
                                Account = Accounts[1],
                                BuyDate = DateTime.Now.AddMonths(-3),
                                Name = "Águas em promoção",
                                Seller = Sellers[2],
                                Spent = 13.90
                           },
                       }
                   },
                },
                EstimatedEarned = 1500,
                EstimatedSpent = 700,
                Earnings =
                {
                    new EarningModel()
                    {
                        Account = Accounts[1],
                        Date = DateTime.Now.AddMonths(-3),
                        Name = "Salário",
                        Value = 1500
                    },
                }
            };
        monthSheetService.CreateMonthSheet(monthSheet4);
        #endregion

        await Task.CompletedTask;
    }
    #endregion

    #region Task ClearAllData()
    private async Task ClearAllData()
    {
        #region Clear MonthSheets
        var monthSheets = monthSheetService.SearchMonthSheets();
        foreach (var monthSheet in monthSheets)
        {
            monthSheetService.DeleteMonthSheet(monthSheet.Id);
        }
        #endregion

        #region Clear Accounts
        var accounts = accountService.SearchAccounts();
        foreach (var account in accounts)
        {
            accountService.DeleteAccount(account.Id);
        }
        #endregion

        #region Clear Sellers
        var sellers = sellerService.SearchSellers();
        foreach (var seller in sellers)
        {
            sellerService.DeleteSeller(seller.Id);
        }
        #endregion

        #region Clear Categories
        var categories = categoryService.SearchCategories();
        foreach (var category in categories)
        {
            categoryService.DeleteCategory(category.Id);
        }
        #endregion

        await Task.CompletedTask;
    }
    #endregion

    #region Task DemoModeOn()
    private async Task DemoModeOn()
    {
        await ClearAllData();
        await FillData();

        navigationManager.NavigateTo("/Monthsheets");
    }
    #endregion
}
