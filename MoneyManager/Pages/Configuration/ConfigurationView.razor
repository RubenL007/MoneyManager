@page "/Configuration"
@using MoneyManager.Data.Interface
@using MoneyManager.Data.Models
@using MoneyManager.Data.Models.Configuration

@inject MoneyManager.Data.Interface.Configuration.IConfiguration configurationService
@inject ICategory categoryService

<EditForm Model=@Configuration>
    <CardComponent>
        <DefaultHeaderComponent Title="Define default values to be defined on the creation of Month Sheets"
                                EditOnClick=@(x => ViewMode = ViewMode == ViewModeEnum.View ? ViewModeEnum.Edit : ViewModeEnum.View)
                                SaveOnClick=@(x => UpdateConfiguration())
                                ViewMode=@ViewMode />
        <div class="row">
            <div class="col">
                @* falta suportar listas *@
                <InputSelectComponent @bind-SelectedItem=@NewCategory
                                      Items=@Categories
                                      TValue=CategoryModel
                                      DisplayName="Categories"
                                      ViewMode=@ViewMode/>
            </div>
        </div>
        <div class="row">
            <div class="col-4">
                <InputNumberComponent @bind-Value=@Configuration.DefaultEstimatedEarned
                                      DisplayName="Estimated Earned"
                                      ViewMode=@ViewMode />
            </div>
            <div class="col-4">
                <InputNumberComponent @bind-Value=@Configuration.DefaultEstimatedSpent
                                      DisplayName="Estimated Spent"
                                      ViewMode=@ViewMode />
            </div>
            <div class="col-4">
                <InputNumberComponent @bind-Value=@Configuration.DefaultEstimatedBalance
                                      DisplayName="Estimated Balance"
                                      ViewMode=@ViewMode />
            </div>
        </div>
    </CardComponent>
</EditForm>


@code {
    #region Properties
    public ConfigurationModel Configuration { get; set; } = new();
    public List<CategoryModel> Categories = new();
    public CategoryModel NewCategory = new();
    ViewModeEnum ViewMode = ViewModeEnum.View;
    #endregion

    #region Task OnInitializedAsync()
    protected override async Task OnInitializedAsync()
    {
        await GetConfiguration();
        await SearchCategories();
        await base.OnInitializedAsync();
    }
    #endregion

    #region Task GetConfiguration()
    private async Task GetConfiguration()
    {
        Configuration = configurationService.GetConfiguration();
        StateHasChanged();
        await Task.CompletedTask;
    }
    #endregion

    #region Task UpdateConfiguration()
    private async Task UpdateConfiguration()
    {
        if (Configuration != null)
        {
            configurationService.UpdateConfiguration(Configuration);
            await GetConfiguration();
        }
        await Task.CompletedTask;
    }
    #endregion


    #region Task SearchCategories()
    private async Task SearchCategories()
    {
        List<CategoryModel> categoriesBase = categoryService.SearchCategories();
        Categories.Clear();
        foreach (var catBase in categoriesBase)
        {
            Categories.Add(new()
                {
                    Id = catBase.Id,
                    Name = catBase.Name,
                });
        }
        await Task.CompletedTask;
    }
    #endregion
}